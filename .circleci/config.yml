version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_DATABASE: testdb
          - MYSQL_USER: 'root'
          - DB_HOST: 127.0.0.1
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_PASSWORD: root
          - MYSQL_ROOT_PASSWORD: secret
          # - MYSQL_ALLOW_EMPTY_PASSWORD: yes
      
    steps:
      #==========ここから追加==========
      - checkout
      - run: sudo apt update 
      - run: sudo apt-get install -y libpng-dev libjpeg-dev
      - run: sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo docker-php-ext-install gd
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi 
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm run dev
      - run:
          name: php test
          command: ./vendor/bin/phpunit
  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - add_ssh_keys
      - run:
          name: deploy
          command: |
            ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd snuggle-app && \
              git fetch origin main && \
              git reset --hard origin/main && \
              composer install -n --no-dev --prefer-dist && \
              npm ci && \
              npm run prod && \
              php artisan migrate --force && \
              php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main


          